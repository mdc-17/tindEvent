{"ast":null,"code":"var _jsxFileName = \"/Users/migueldominguezchamorro/Desktop/TindEvent/TindEvent-front/my-app/src/components/AnonRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/AuthProvider\"; // El componente <AnonRoute /> recibe como argumento un objecto con las propiedades: component con el valor de un componente (Signup, Login), isLoggedin (viene de withAuth, ya que Signup se exporta como withAuth(Signup), y el resto de las props (si hubiera))\n\nfunction AnonRoute({\n  component: Component,\n  isLoggedin,\n  ...rest\n}) {\n  // devuelve un componente <Route /> donde su prop render recibe las props, y si no está logueado, devuelve el componente con sus props (history, etc.), en caso contrario, el componente <Redirect /> redirige a /private\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isLoggedin ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 23\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 50\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default withAuth(AnonRoute);","map":{"version":3,"sources":["/Users/migueldominguezchamorro/Desktop/TindEvent/TindEvent-front/my-app/src/components/AnonRoute.js"],"names":["React","Route","Redirect","withAuth","AnonRoute","component","Component","isLoggedin","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB,C,CAEA;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,UAAxB;AAAoC,KAAGC;AAAvC,CAAnB,EAAkE;AAChE;AACA,sBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IACN,CAACF,UAAD,gBAAc,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAd,gBAAyC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD;;AAED,eAAeN,QAAQ,CAACC,SAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/AuthProvider\";\n\n// El componente <AnonRoute /> recibe como argumento un objecto con las propiedades: component con el valor de un componente (Signup, Login), isLoggedin (viene de withAuth, ya que Signup se exporta como withAuth(Signup), y el resto de las props (si hubiera))\n\nfunction AnonRoute({ component: Component, isLoggedin, ...rest }) {\n  // devuelve un componente <Route /> donde su prop render recibe las props, y si no está logueado, devuelve el componente con sus props (history, etc.), en caso contrario, el componente <Redirect /> redirige a /private\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isLoggedin ? <Component {...props} /> : <Redirect to='/' />\n      }\n    />\n  );\n}\n\nexport default withAuth(AnonRoute);\n"]},"metadata":{},"sourceType":"module"}